name: Mug It

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: mug-it
 

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . \
        --build-arg BANNERBEAR_API_KEY_WITHOUT_MAIN_IMAGES = ${{ secrets.BANNERBEAR_API_KEY_WITHOUT_MAIN_IMAGES }} \
        --build-arg BANNERBEAR_API_KEY_MAIN_IMAGES = ${{ secrets.BANNERBEAR_API_KEY_MAIN_IMAGES }} \
        --build-arg TWITTER_API_KEY = ${{ secrets.TWITTER_API_KEY }} \
        --build-arg TWITTER_API_SECRET = ${{ secrets.TWITTER_API_SECRET }} \
        --build-arg TWITTER_ACCESS_TOKEN = ${{ secrets.TWITTER_ACCESS_TOKEN }} \
        --build-arg TWITTER_ACCESS_SECRET = ${{ secrets.TWITTER_ACCESS_SECRET }} \
        --build-arg BEARER_TOKEN = ${{ secrets.BEARER_TOKEN }} \
        --build-arg TWITTER_USER_ID = ${{ secrets.TWITTER_USER_ID }} \
        --build-arg CLOUDINARY_NAME = ${{ secrets.CLOUDINARY_NAME }} \
        --build-arg CLOUDINARY_API_KEY = ${{ secrets.CLOUDINARY_API_KEY }} \
        --build-arg CLOUDINARY_API_SECRET = ${{ secrets.CLOUDINARY_API_SECRET }} \
        --build-arg WOOCOMMERCE_WEBSITE = ${{ secrets.WOOCOMMERCE_WEBSITE }} \
        --build-arg WOOCOMMERC_CONSUMER_KEY = ${{ secrets.WOOCOMMERC_CONSUMER_KEY }} \
        --build-arg WOOCOMMERC_CONSUMER_SECRET = ${{ secrets.WOOCOMMERC_CONSUMER_SECRET }} \
        --build-arg ALLOWED_REQUESTS_PER_DAY = ${{ secrets.ALLOWED_REQUESTS_PER_DAY }} \
        --build-arg DATABASE_URL = ${{ secrets.DATABASE_URL }} \
        --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log into registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
